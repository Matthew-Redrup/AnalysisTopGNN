{"meta": {"version": "7.2.7", "timestamp": "2023-06-17T03:37:52.783814", "branch_coverage": false, "show_contexts": false}, "files": {"test/check.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 8, 9, 11, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 36, 52, 53, 54, 55, 56, 57, 59, 62, 63, 65, 107, 125, 127, 148, 151, 155, 158, 162, 169, 173, 194, 198, 203, 207], "summary": {"covered_lines": 43, "num_statements": 163, "percent_covered": 26.380368098159508, "percent_covered_display": "26", "missing_lines": 120, "excluded_lines": 0}, "missing_lines": [7, 10, 13, 21, 27, 33, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 61, 64, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 129, 130, 131, 133, 134, 135, 136, 138, 139, 141, 142, 144, 145, 146, 150, 153, 154, 157, 160, 161, 164, 165, 166, 167, 174, 175, 177, 178, 179, 181, 182, 184, 185, 187, 188, 189, 190, 192, 193, 196, 197, 200, 201, 202, 205, 206, 209, 210, 211, 212, 214], "excluded_lines": []}, "test/conftest.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 18], "summary": {"covered_lines": 8, "num_statements": 13, "percent_covered": 61.53846153846154, "percent_covered_display": "62", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [4, 10, 13, 19, 20], "excluded_lines": []}, "test/examples/Belle.py": {"executed_lines": [1, 2, 4, 5, 13, 15, 25], "summary": {"covered_lines": 7, "num_statements": 18, "percent_covered": 38.888888888888886, "percent_covered_display": "39", "missing_lines": 11, "excluded_lines": 0}, "missing_lines": [6, 7, 8, 9, 10, 11, 16, 18, 19, 21, 26], "excluded_lines": []}, "test/examples/Event.py": {"executed_lines": [1, 2, 4, 6, 7, 10, 11, 12, 13, 15, 17, 23, 25, 27, 30, 31, 32, 33, 34, 37, 38, 39], "summary": {"covered_lines": 22, "num_statements": 22, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "test/examples/ExampleSelection.py": {"executed_lines": [1, 3, 5, 6, 7, 8, 10, 15, 17, 18, 19, 20, 22], "summary": {"covered_lines": 13, "num_statements": 21, "percent_covered": 61.904761904761905, "percent_covered_display": "62", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [11, 12, 13, 23, 24, 25, 26, 27], "excluded_lines": []}, "test/examples/Particles.py": {"executed_lines": [1, 3, 5, 6, 8, 9, 10, 11, 12, 14, 16, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 31, 33, 34, 35, 36], "summary": {"covered_lines": 26, "num_statements": 26, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "test/models/CheatModel.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 27, 29, 30, 31, 33, 34, 35, 37, 38, 40, 41, 42], "summary": {"covered_lines": 32, "num_statements": 32, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "test/neutrino_reconstruction/NeutrinoSolutionDeconstruct.py": {"executed_lines": [1, 2, 3, 6, 8, 9, 10, 12, 13, 16, 18, 19, 22, 25, 27, 28, 29, 31, 33, 34, 36, 38, 39, 40, 41, 42, 44, 46, 48, 50, 53, 55, 60, 62, 65, 66, 67, 68, 69, 73, 74, 76, 78, 80, 81, 83, 84, 85, 86, 87, 89, 90, 92, 93, 94, 96, 97, 99, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 114, 117, 119, 120, 122, 123, 124, 128, 129, 131, 134, 135, 139, 140, 145, 146, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 176, 177, 179, 181, 182, 183, 216, 217], "summary": {"covered_lines": 110, "num_statements": 144, "percent_covered": 76.38888888888889, "percent_covered_display": "76", "missing_lines": 34, "excluded_lines": 0}, "missing_lines": [4, 11, 63, 70, 137, 142, 143, 174, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 205, 206, 208, 210, 211, 213, 214, 219, 220], "excluded_lines": []}, "test/test_ami.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34], "summary": {"covered_lines": 21, "num_statements": 31, "percent_covered": 67.74193548387096, "percent_covered_display": "68", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [3, 17, 21, 22, 27, 33, 36, 37, 38, 39], "excluded_lines": []}, "test/test_dataloader_quantization.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72], "summary": {"covered_lines": 52, "num_statements": 64, "percent_covered": 81.25, "percent_covered_display": "81", "missing_lines": 12, "excluded_lines": 0}, "missing_lines": [9, 22, 35, 41, 47, 52, 59, 70, 71, 74, 75, 76], "excluded_lines": []}, "test/test_features.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 193, 194, 196, 197, 198, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 235, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 252, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 294, 296, 297, 299, 300, 302, 303, 304, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 324, 325, 326, 328], "summary": {"covered_lines": 204, "num_statements": 270, "percent_covered": 75.55555555555556, "percent_covered_display": "76", "missing_lines": 66, "excluded_lines": 0}, "missing_lines": [9, 24, 32, 39, 42, 49, 53, 57, 61, 77, 80, 87, 91, 99, 106, 113, 116, 125, 126, 129, 132, 139, 145, 146, 149, 152, 162, 170, 178, 186, 189, 192, 195, 199, 203, 207, 211, 218, 221, 230, 231, 234, 237, 244, 250, 251, 254, 257, 267, 275, 284, 292, 295, 298, 301, 305, 308, 319, 323, 327, 330, 332, 333, 334, 335, 337], "excluded_lines": []}, "test/test_generators.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 91, 92, 94, 95, 97, 98, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 222, 223, 224, 225, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 248, 250, 251, 252, 253, 255, 257, 258, 259, 260, 262, 264, 265, 266, 268, 269, 270, 272, 274, 275, 276, 277, 278, 280, 282, 284, 285, 286, 287, 289, 291, 293, 294, 295, 296, 297, 298, 300, 302, 303, 304, 306, 308, 311, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 329, 331, 332, 333, 335, 336, 337, 338, 340, 342, 344, 345, 346, 347, 349, 351, 352, 353, 354, 356, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 371, 373, 375], "summary": {"covered_lines": 212, "num_statements": 305, "percent_covered": 69.50819672131148, "percent_covered_display": "70", "missing_lines": 93, "excluded_lines": 0}, "missing_lines": [15, 25, 40, 43, 46, 50, 51, 66, 71, 75, 79, 83, 87, 90, 93, 96, 99, 102, 108, 119, 133, 137, 146, 151, 158, 167, 178, 187, 193, 197, 207, 214, 219, 221, 226, 231, 233, 239, 244, 249, 254, 256, 261, 263, 267, 271, 273, 279, 281, 283, 288, 290, 292, 299, 301, 305, 307, 309, 319, 321, 328, 330, 334, 339, 341, 343, 348, 350, 355, 357, 362, 364, 370, 372, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394], "excluded_lines": []}, "test/test_io.py": {"executed_lines": [1, 3, 4, 6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42], "summary": {"covered_lines": 32, "num_statements": 33, "percent_covered": 96.96969696969697, "percent_covered_display": "97", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [43], "excluded_lines": []}, "test/test_machine_learning.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178], "summary": {"covered_lines": 127, "num_statements": 153, "percent_covered": 83.00653594771242, "percent_covered_display": "83", "missing_lines": 26, "excluded_lines": 0}, "missing_lines": [8, 10, 19, 24, 26, 29, 35, 45, 49, 60, 62, 73, 76, 90, 102, 104, 131, 134, 143, 150, 162, 174, 177, 181, 182, 183], "excluded_lines": []}, "test/test_memory.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 84, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 113, 129, 130, 131, 132, 133, 135, 136, 137, 138, 141, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 211, 212, 213, 214, 215, 216, 218, 220, 221, 224, 225, 228], "summary": {"covered_lines": 117, "num_statements": 187, "percent_covered": 62.5668449197861, "percent_covered_display": "63", "missing_lines": 70, "excluded_lines": 0}, "missing_lines": [8, 16, 22, 28, 35, 39, 60, 66, 74, 80, 83, 88, 98, 104, 105, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 134, 139, 140, 143, 144, 145, 146, 147, 148, 151, 154, 162, 167, 171, 175, 178, 188, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 217, 222, 223, 226, 227, 230, 231, 232, 233, 234], "excluded_lines": []}, "test/test_neutrino_reconstruction.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 22, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 60, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 96, 97, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153, 155, 156, 157, 159, 160, 161, 163, 164, 165, 167, 168, 170, 171, 173, 174, 175, 177, 178, 238, 239, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 413, 416, 417, 418, 419, 420, 421, 423, 424, 495, 496, 614, 615, 865], "summary": {"covered_lines": 110, "num_statements": 647, "percent_covered": 17.001545595054097, "percent_covered_display": "17", "missing_lines": 537, "excluded_lines": 0}, "missing_lines": [5, 9, 14, 18, 19, 20, 21, 23, 41, 44, 50, 55, 59, 61, 64, 68, 72, 76, 80, 82, 83, 84, 86, 87, 88, 90, 91, 92, 94, 95, 98, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 134, 146, 150, 154, 158, 162, 166, 169, 172, 176, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 257, 258, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 280, 281, 282, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 301, 302, 303, 305, 306, 307, 309, 310, 311, 313, 314, 315, 317, 318, 319, 321, 322, 323, 325, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 369, 370, 372, 380, 397, 403, 407, 414, 415, 422, 425, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 478, 479, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 554, 555, 556, 558, 559, 560, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 604, 605, 606, 608, 609, 611, 612, 616, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 645, 646, 647, 650, 651, 652, 654, 655, 656, 658, 659, 660, 667, 673, 675, 676, 677, 679, 680, 681, 683, 684, 686, 687, 689, 690, 693, 694, 695, 696, 698, 699, 701, 702, 704, 705, 706, 707, 709, 710, 712, 713, 715, 717, 718, 720, 721, 723, 725, 733, 734, 735, 737, 745, 747, 748, 749, 750, 752, 753, 754, 755, 757, 758, 759, 762, 763, 764, 766, 767, 768, 770, 771, 772, 779, 785, 788, 789, 790, 792, 793, 794, 796, 797, 799, 800, 802, 803, 806, 807, 808, 809, 811, 812, 814, 815, 817, 818, 819, 820, 822, 823, 825, 826, 828, 830, 831, 833, 834, 836, 838, 846, 847, 848, 850, 859, 861, 862, 863, 864, 866, 871, 874], "excluded_lines": []}, "test/test_notification.py": {"executed_lines": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43], "summary": {"covered_lines": 31, "num_statements": 42, "percent_covered": 73.80952380952381, "percent_covered_display": "74", "missing_lines": 11, "excluded_lines": 0}, "missing_lines": [8, 17, 26, 34, 42, 44, 45, 46, 47, 48, 49], "excluded_lines": []}, "test/test_templates.py": {"executed_lines": [1, 2, 3, 4, 6, 8, 9, 10, 12, 13, 14, 16, 17, 19, 20, 23, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 39, 40, 41, 44, 45, 46, 47, 48, 51, 52, 53, 54, 56, 57, 58, 59, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 83, 84, 87, 88, 89, 91, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 256, 257, 258, 260, 261, 262, 263, 264, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 290, 292, 293, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 309, 311, 312, 313, 315, 316, 317, 318, 319, 323, 324, 325, 326, 327, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 348, 349, 351, 352, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 367, 368, 370, 384], "summary": {"covered_lines": 221, "num_statements": 288, "percent_covered": 76.73611111111111, "percent_covered_display": "77", "missing_lines": 67, "excluded_lines": 0}, "missing_lines": [7, 11, 15, 18, 21, 25, 31, 37, 42, 49, 55, 60, 67, 76, 81, 85, 90, 94, 98, 106, 112, 118, 124, 130, 136, 143, 146, 150, 152, 168, 173, 188, 204, 207, 217, 229, 233, 238, 247, 249, 253, 255, 259, 273, 279, 284, 289, 291, 294, 302, 304, 308, 310, 314, 328, 331, 335, 344, 347, 350, 353, 357, 365, 369, 371, 385, 394], "excluded_lines": []}, "test/test_tools.py": {"executed_lines": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 67, 69, 70, 71, 73, 75, 76, 77, 78, 79, 82], "summary": {"covered_lines": 64, "num_statements": 67, "percent_covered": 95.5223880597015, "percent_covered_display": "96", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [65, 85, 86], "excluded_lines": []}, "test/test_tracer.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 43, 45, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 74, 75, 76, 79, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 124, 125, 126, 128, 129, 131, 132, 134, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 159, 160, 162, 163, 165, 166, 168, 169, 171, 172, 174, 175, 177, 178, 180, 182, 183, 186, 188, 189, 190, 191, 192, 194, 195, 197, 198, 199, 200, 202], "summary": {"covered_lines": 102, "num_statements": 150, "percent_covered": 68.0, "percent_covered_display": "68", "missing_lines": 48, "excluded_lines": 0}, "missing_lines": [16, 18, 22, 24, 28, 42, 44, 46, 51, 55, 69, 72, 77, 80, 84, 88, 91, 107, 109, 112, 116, 120, 123, 127, 130, 133, 135, 139, 144, 149, 152, 158, 161, 164, 167, 170, 173, 176, 179, 181, 184, 187, 193, 196, 201, 203, 206, 208], "excluded_lines": []}}, "totals": {"covered_lines": 1554, "num_statements": 2676, "percent_covered": 58.07174887892376, "percent_covered_display": "58", "missing_lines": 1122, "excluded_lines": 0}}