[build-system]
requires = ["setuptools", "cython"]
build-backend = "setuptools.build_meta"

[project]
name = "AnalysisG"
version = "3.1"
authors = [{name = "woywoy123"}]
readme = "README.md"
requires-python = ">=3.7"
dependencies = [
    "torch==2.0.1", 
    "numpy", 
    "uproot", 
    "h5py", 
    "mplhep", 
    "networkx", 
    "scikit-learn", 
    "torchmetrics", 
    "vector", 
    "torch-geometric", 
    "pyAMI-atlas==5.1.0.1", 
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Cython", 
    "Programming Language :: C++"
]


[tool.setuptools.package-dir]
"AnalysisG" = "src"
"AnalysisG.Notification" = "src/Notification"
"AnalysisG.IO" = "src/IO"
"AnalysisG.Settings" = "src/Settings"
"AnalysisG.Templates" = "src/Templates"
"AnalysisG.Events" = "src/Events"
"AnalysisG.Particles" = "src/Events/Particles"
"AnalysisG.Graphs" = "src/Events/Graphs"
"AnalysisG.Tools" = "src/Tools"
"AnalysisG.Generators" = "src/Generators"
"AnalysisG.Plotting" = "src/Plotting" 
"AnalysisG.Submission" = "src/Submission"
"AnalysisG.Model" = "src/Model"
"AnalysisG.Evaluation" = "src/Evaluation"

[project.scripts]
CONFIG_PYAMI = "AnalysisG.Settings:CONFIG_PYAMI"
CHECK_CUDA = "AnalysisG.Settings:CHECK_CUDA"
POST_INSTALL_PYC = "AnalysisG.Settings:POST_INSTALL_PYC"

[project.optional-dependencies]
test = [
    "tox", 
    "pytest"
]


[tool.pytest.ini_options]
testpaths = ["test"]
addopts = "-p no:cacheprovider"
python_files = [
    "test/test_ami.py", 
    "test/test_dataloader_quantization.py", 
    "test/test_features.py", 
    "test/test_generators.py", 
    "test/test_io.py", 
    "test/test_machine_learning.py", 
    "test/test_memory.py", 
    "test/test_neutrino_reconstruction.py", 
    "test/test_notification.py", 
    "test/test_templates.py", 
    "test/test_tools.py", 
    "test/test_tracer.py"
]

[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
exclude_lines = [
    'if __name__ == "__main__":'
]


